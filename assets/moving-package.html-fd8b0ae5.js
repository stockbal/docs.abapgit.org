import{_ as n,X as s,Y as r,Z as t,$ as i,a0 as o,a1 as a,a2 as g,H as c}from"./framework-c1ee72d8.js";const l="/img/existing_package.png",p="/img/existing_git_before.png",d="/img/existing_clone.png",m="/img/existing_repo.png",u="/img/existing_result.png",_="/img/existing_git_after.png",f={},h=g('<p>You have an existing package in your system that you want to copy to a new git repository:</p><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Initialize the git repository, make sure it is not emtpy (typically you add README and LICENSE files from a template):</p><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="new-repository" tabindex="-1"><a class="header-anchor" href="#new-repository" aria-hidden="true">#</a> New Repository</h2><p>In abapGit, create a repository via the &quot;New Online&quot; button:</p><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>The existing objects will show up in the worklist making it possible to commit the objects to the git repository:</p><figure><img src="'+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="stage-and-commit" tabindex="-1"><a class="header-anchor" href="#stage-and-commit" aria-hidden="true">#</a> Stage and Commit</h2>',10),y=t("p",null,"Now your local abapGit repo and the remote git repository are in sync.",-1),x=t("figure",null,[t("img",{src:u,alt:"",tabindex:"0",loading:"lazy"}),t("figcaption")],-1),b=t("code",null,"/src/",-1),w=t("figure",null,[t("img",{src:_,alt:"",tabindex:"0",loading:"lazy"}),t("figcaption")],-1);function k(v,N){const e=c("RouterLink");return s(),r("div",null,[h,t("p",null,[i('Select "Stage", "Add All and Commit", and finally "Commit" to transfer all changes to your git repository. For details, see '),o(e,{to:"/user-guide/projects/online/stage-commit.html"},{default:a(()=>[i("Committing changes to git")]),_:1}),i(".")]),y,x,t("p",null,[i("You can view the updated repository, which will contains a "),o(e,{to:"/user-guide/repo-settings/dot-abapgit.html"},{default:a(()=>[i(".abapgit.xml")]),_:1}),i(" file and a "),b,i(" folder with all your objects.")]),w])}const C=n(f,[["render",k],["__file","moving-package.html.vue"]]);export{C as default};
